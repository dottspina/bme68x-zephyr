# SPDX-License-Identifier: Apache-2.0

# Implied when the devicetree contains compatible devices:
#CONFIG_BME68X_SENSOR_API_DRIVER=y
#CONFIG_BME68X_SENSOR_API=y

# Enable the floating-point version of BME68X Sensor API.
#CONFIG_BME68X_SENSOR_API_FLOAT=y

# Enable BSEC/IAQ library.
CONFIG_BSEC=y
CONFIG_BME68X_IAQ=y
# Adjust main stack size to accommodate the BSEC working buffers.
CONFIG_MAIN_STACK_SIZE=8192

# Enable ESP
CONFIG_BME68X_ESP=y
# Bluetooth LE Peripheral role.
CONFIG_BT=y
CONFIG_BT_PERIPHERAL=y
# Name can be up to 248 bytes long (excluding NULL termination).
# Can be empty string.
# See also CONFIG_BT_DEVICE_NAME_MAX.
CONFIG_BT_DEVICE_NAME="ESP Sensor (BME68X)"
# Bluetooth device appearance (Assigned_Numbers ยง2.6.2/ยง2.6.3)
# 0x0543: Temperature sensor
CONFIG_BT_DEVICE_APPEARANCE=1347

# Automatically resume advertising.
CONFIG_BME68X_ESP_GAP_ADV_AUTO=y
# Allow two connected centrals (default 1).
#CONFIG_BT_MAX_CONN=2

# Allow Bluetooth clients to reconfigure notifications:
# - all connected centrals
#CONFIG_BME68X_ES_TRIGGER_SETTINGS_WRITE
# - only over encrypted connections (requires SMP)
#CONFIG_BME68X_ES_TRIGGER_SETTINGS_WRITE_ENCRYPT=y
# - only over authenticated connections (requires SMP)
#CONFIG_BME68X_ES_TRIGGER_SETTINGS_WRITE_AUTHEN

# Enable and configure Bluetooth Security Manager Protocol
# required for pairing.
#CONFIG_BT_SMP=y

# Enable Bluetooth Settings required for bonding.
# Note: enabling CONFIG_BT_SETTINGS without CONFIG_BT_SMP
#       may cause set-value errors on boot:
#       settings: set-value failure. key: bt/hash error(-2)
#CONFIG_BT_SETTINGS=y
# Delete oldest key when pairing attempt occurs and the key storage is full.
#CONFIG_BT_KEYS_OVERWRITE_OLDEST=y

# Enabling encrypted connections with the default system workqueue
# stack size causes hard MPU FAULT Stack overflow.
#CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=2048

# Enable privacy for the local device.
# This makes the device use Resolvable Private Addresses (RPAs) by default.
#CONFIG_BT_PRIVACY=y

# Global Settings subsystem configuration with NVS backend.
#CONFIG_SETTINGS=y
#CONFIG_NVS=y
#CONFIG_FLASH=y
#CONFIG_FLASH_MAP=y
#CONFIG_SETTINGS_NVS=y

CONFIG_LOG=y
CONFIG_STDOUT_CONSOLE=y
# Logging floating point numbers.
CONFIG_CBPRINTF_FP_SUPPORT=y

# Troubleshoot ESP.
CONFIG_BME68X_ESP_LOG_LEVEL_DBG=y

# Troubleshoot BSEC control loop.
#CONFIG_BME68X_IAQ_LOG_LEVEL_DBG=y

# Troubleshoot communication interfaces
#CONFIG_I2C_LOG_LEVEL_DBG=y
#CONFIG_SPI_LOG_LEVEL_DBG=y

# Export threads information for debugger RTOS plugins.
# Supported by https://pyocd.io/docs/gdbserver.html
#CONFIG_DEBUG_THREAD_INFO=y
